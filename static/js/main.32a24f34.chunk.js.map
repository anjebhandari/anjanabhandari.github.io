{"version":3,"sources":["Sections/AboutMe.js","Sections/SkillSet.js","Sections/Home.js","Sections/Footer.js","App.js","serviceWorker.js","index.js"],"names":["AboutMe","props","componentDidMount","fetch","method","then","response","json","console","log","setState","aboutMe","state","division","this","map","item","className","title","main","Component","SkillSet","skills","skillCol","skill","name","what","why","when","Home","class","Footer","onClick","e","preventDefault","show","onChange","target","value","fullName","href","App","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.32a24f34.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../assets/aboutme.scss';\n\nclass AboutMe extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      aboutMe: []\n    }\n  }\n  componentDidMount = () => {\n    fetch(\"./data/aboutme.json\", {\n      method: \"GET\"\n    })\n      .then(response => { return response.json() })\n      .then(response => {\n        console.log(\"about me \", response)\n        this.setState({\n          aboutMe: response\n        })\n      });\n  }\n\n  render() {\n    let division = this.state.aboutMe.map(item => {\n      return (\n        <div className=\"aboutme-col\">\n          <div className=\"aboutme-main\">\n            <div className={item.className} >{item.title}</div>\n            <div className=\"aboutme-me\"> {item.main} </div>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"section\">\n        <div className=\"row m-0 aboutme-row\">\n          {division}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AboutMe;","import React, { Component } from 'react';\nimport '../assets/skillSet.scss';\n\nclass SkillSet extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      skills: []\n    }\n  }\n\n  componentDidMount = () => {\n    fetch('./data/skillSet.json', {\n      method: 'GET'\n    })\n      .then(response => { return response.json() })\n      .then(response => {\n        console.log('Skillsets', response);\n        this.setState({\n          skills: response\n        })\n      });\n  }\n\n  render() {\n    const skillCol = this.state.skills.map(skill => {\n      return (\n        <div className=\"col-3 skill-col\">\n          <span className=\"capatilized skill-title\"> {skill.name} </span>\n          <ul className=\"unstyled-list skill-list\">\n            <li>{skill.what}</li>\n            <li>{skill.why}</li>\n            <li>{skill.when}</li>\n          </ul>\n        </div>\n      )\n    })\n    return (\n      <div className=\"section\">\n        <div className=\"row\">\n          <p>Skillsets I've Gathered Over the Years</p>\n        </div>\n        <div className=\"row skill-row\">\n          {/* repeate from here */}\n          {skillCol}\n          {/* repeate up to here */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SkillSet;","import React, { Component } from 'react';\nimport '../assets/homes.scss';\n\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"section\">\n        <div class=\"row home-row\">\n          <div>\n            <span className=\"hello \">Hello</span>\n            <br />\n            <span className=\"world\">World</span>\n            <span className=\"full-stop\">.</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport '../assets/footer.scss';\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: \"hide\",\n      fullName: null\n    }\n  }\n  onClick = e => {\n    e.preventDefault();\n    if (this.state.show === 'hide')\n      this.setState({ show: \"show\" });\n    else\n      this.setState({ show: \"hide\" });\n  }\n  onChange = e => {\n    console.log(\"e.target.name\", e.target.name, \"e.target.value\", e.target.value)\n  }\n  render() {\n    return (\n      <div className=\"section footer\">\n        <div className=\"row hireme-row\">\n          <div className=\"collabrate\" onClick={this.onClick}>Let's collabrate Together</div>\n\n        </div>\n        {/* <div className=\"row\">\n          <div className={this.state.show}>\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-row\">\n                <label className=\"form-row-item\">Enter your Name</label>\n                <input className=\"form-row-item\" type=\"text\" required name=\"fullName\" value={this.state.fullName} onChange={this.onChange} ></input>\n              </div>\n              <div className=\"form-row\">\n                <label className=\"form-row-item\">Your Email Address</label>\n              </div>\n            </form>\n          </div>\n        </div> */}\n        <div className=\"row followme-row\">\n          <ul className=\"unstyled-list in-line\">\n            <li><a href=\"https://www.linkedin.com/in/anjana-bhandari-496293129/\" target=\"_blank\" ><i class=\"fa fa-linkedin\"></i></a></li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport AboutMe from './Sections/AboutMe';\nimport SkillSet from './Sections/SkillSet';\nimport Home from './Sections/Home';\nimport Footer from './Sections/Footer';\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <main>\n        {/* <section id=\"nav\"><Navigation /></section> */}\n        {/* <section id=\"header\"><Header /></section> */}\n        {/* <section id=\"about me\"><AboutMe /></section> */}\n        <section id=\"home\"><Home /></section>\n        <section id=\"about me\"><AboutMe /></section>\n        <section id=\"languages i know\"><SkillSet /></section>\n        <section id=\"footer\"><Footer /></section>\n      </main>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}